{"version":3,"sources":["components/Chart.js","App.js","index.js"],"names":["formatDate","dateString","date","Date","concat","getFullYear","getMonth","toString","padStart","getDate","Chart","_ref","ticker","data","setData","useState","title","setTitle","metrics","setMetrics","useEffect","axios","get","process","then","response","responseData","name","parsedData","JSON","parse","prices","dates","map","item","values","Close","latestPrice","length","latestChange","lastYear","lastPriceLastYear","findIndex","ytdChange","high","Math","max","highDate","indexOf","low","min","lowDate","x","y","type","mode","catch","error","console","React","createElement","className","Plot","layout","autosize","height","margin","l","r","b","t","pad","useResizeHandler","style","width","toFixed","color","App","tickers","printRef","useRef","ref","src","alt","key","onClick","async","element","current","canvas","html2canvas","scrollY","window","useCORS","imgData","toDataURL","pdf","jsPDF","orientation","unit","format","pdfHeight","internal","pageSize","getHeight","pdfWidth","getWidth","totalHeight","position","addPage","addImage","save","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2757a443.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport axios from 'axios';\r\nimport './Chart.css';\r\n\r\nfunction formatDate(dateString) {\r\n  const date = new Date(dateString);\r\n  return `${date.getFullYear()}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getDate().toString().padStart(2, '0')}`;\r\n}\r\n\r\nfunction Chart({ ticker }) {\r\n  const [data, setData] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [metrics, setMetrics] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/data/${ticker}`)\r\n    .then(response => {\r\n\r\n      const responseData = response.data;\r\n      const name = responseData.name;\r\n      const parsedData = JSON.parse(responseData.prices);\r\n      const dates = parsedData.map(item => item.Date);\r\n      const values = parsedData.map(item => item.Close);\r\n\r\n      // Calculate metrics\r\n      const latestPrice = values[values.length - 1];\r\n      const latestChange = ((values[values.length - 1] - values[values.length - 2]) / values[values.length - 2]) * 100;\r\n \r\n      // Find the last trading day of the previous year\r\n      const lastYear = new Date().getFullYear() - 1;\r\n      const lastPriceLastYear = values[dates.findIndex(date => new Date(date).getFullYear() > lastYear) - 1];\r\n\r\n      // Calculate YTD\r\n      const ytdChange = ((latestPrice - lastPriceLastYear) / lastPriceLastYear) * 100;\r\n      \r\n      //Other Metrics\r\n      const high = Math.max(...values);\r\n      const highDate = dates[values.indexOf(high)];\r\n      const low = Math.min(...values);\r\n      const lowDate = dates[values.indexOf(low)];\r\n\r\n      setData([\r\n        {\r\n          x: dates,\r\n          y: values,\r\n          type: 'scatter',\r\n          mode: 'lines', // Changed to 'lines' to remove ticks\r\n        }\r\n      ]);\r\n      setTitle(name); // Set the chart title\r\n      setMetrics({ latestPrice, latestChange, ytdChange, high, highDate, low, lowDate });\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching data:', error);\r\n    });\r\n  }, [ticker]);\r\n  \r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      <Plot\r\n        data={data}\r\n        layout={{\r\n          autosize: true, // Allows the chart to resize automatically\r\n          title: title,\r\n          height: 200,\r\n          margin: {\r\n            l: 35, r: 35, b: 35, t: 35, // Adjust margins to fit the container\r\n            pad: 4\r\n          }\r\n        }}\r\n        useResizeHandler={true} // Ensures the chart resizes with the container\r\n        style={{ width: \"100%\", height: \"100%\" }} // Fill the container\r\n      />\r\n      <div className=\"chart-metrics\">\r\n        <p>Latest price: <span>{metrics.latestPrice ? metrics.latestPrice.toFixed(2) : 'N/A'}</span></p>\r\n        <p>Latest change: <span style={{ color: metrics.latestChange > 0 ? 'red' : 'green' }}>\r\n          {metrics.latestChange ? metrics.latestChange.toFixed(2) : 'N/A'}%\r\n        </span></p>\r\n        <p>YTD: <span style={{ color: metrics.ytdChange > 0 ? 'red' : 'green' }}>\r\n          {metrics.ytdChange ? metrics.ytdChange.toFixed(2) : 'N/A'}%\r\n        </span></p>\r\n        <p>High: <span>{metrics.high ? metrics.high.toFixed(2) : 'N/A'}</span> on <span>{metrics.highDate ? formatDate(metrics.highDate) : 'N/A'}</span></p>\r\n        <p>Low: <span>{metrics.low ? metrics.low.toFixed(2) : 'N/A'}</span> on <span>{metrics.lowDate ? formatDate(metrics.lowDate) : 'N/A'}</span></p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;","import React, { useState, useRef } from 'react';\r\nimport Chart from './components/Chart';\r\nimport './App.css'; \r\nimport html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\n\r\nfunction App() {\r\n  const [tickers] = useState([\r\n    '^GSPC', '^IXIC', '^DJI',\r\n    '000002.SS', '399107.SZ', '^HSI',\r\n    '^STOXX', '^FTSE', '^GDAXI',\r\n    'GC=F', 'HG=F', 'Missing Copper/Gold Ratio',\r\n    'CL=F', 'BZ=F', 'NG=F',\r\n    'DX-Y.NYB', 'EURCNY=X', 'JPYCNY=X',\r\n    'CNY=X', 'HKDCNY=X', 'JPY=X'\r\n  ]);\r\n\r\n  const printRef = useRef();\r\n\r\n  const handleDownloadPdf = async () => {\r\n    const element = printRef.current;\r\n    const canvas = await html2canvas(element, {\r\n      scrollY: -window.scrollY,\r\n      useCORS: true\r\n    });\r\n    const imgData = canvas.toDataURL('image/png');\r\n    \r\n    const pdf = new jsPDF({\r\n      orientation: 'portrait',\r\n      unit: 'px',\r\n      format: [canvas.width, canvas.height]\r\n    });\r\n  \r\n    let pdfHeight = pdf.internal.pageSize.getHeight();\r\n    let pdfWidth = pdf.internal.pageSize.getWidth();\r\n    let totalHeight = canvas.height;\r\n    \r\n    for (let position = 0; position < totalHeight; position += pdfHeight) {\r\n      if (position !== 0) {\r\n        pdf.addPage();\r\n      }\r\n      pdf.addImage(imgData, 'PNG', 0, -position, pdfWidth, totalHeight);\r\n    }\r\n  \r\n    pdf.save('download.pdf');\r\n  };\r\n\r\n  return (\r\n    <div ref={printRef}>\r\n\r\n      <header className=\"app-header\">\r\n        <div className=\"header-content\">\r\n          <img src=\"logo.png\" alt=\"Logo\" className=\"logo\" />\r\n          <div>\r\n            <h1 className=\"title\">Market Dashboard</h1>\r\n            <h2 className=\"subtitle\">by Frank Zhao</h2>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"instructions\">\r\n        <p>\r\n          本程序用于跟踪各市场指标，数据非实时更新，展示皆为收盘价，仅供参考。部分图表未完成，请待后续更新；后续亦有更多功能更新。\r\n          全部为非工作时间完成，更新较慢请谅解。如有问题或修改建议欢迎联系微信：frankz2020\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"chart-grid\">\r\n        {tickers.map(ticker => (\r\n          <Chart key={ticker} ticker={ticker} />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"button-container\">\r\n        <button onClick={handleDownloadPdf} className=\"download-button\">Download as PDF</button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'; // If you have any global CSS\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}