{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\Documents\\\\Python Scripts\\\\in_progress\\\\dev_mkt_watchboard\\\\v1\\\\react\\\\src\\\\components\\\\Chart.js\";\nimport React, { useEffect, useState } from 'react';\nimport Plot from 'react-plotly.js';\nimport axios from 'axios';\nimport './Chart.css';\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  return `${date.getFullYear()}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getDate().toString().padStart(2, '0')}`;\n}\nfunction Chart({\n  ticker\n}) {\n  const [data, setData] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [metrics, setMetrics] = useState({});\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/data/${ticker}`).then(response => {\n      const responseData = response.data;\n      const name = responseData.name;\n      const parsedData = JSON.parse(responseData.prices);\n      const dates = parsedData.map(item => item.Date);\n      const values = parsedData.map(item => item.Close);\n\n      // Calculate metrics\n      const latestPrice = values[values.length - 1];\n      const latestChange = (values[values.length - 1] - values[values.length - 2]) / values[values.length - 2] * 100;\n\n      // Find the last trading day of the previous year\n      const lastYear = new Date().getFullYear() - 1;\n      const lastPriceLastYear = values[dates.findIndex(date => new Date(date).getFullYear() > lastYear) - 1];\n\n      // Calculate YTD\n      const ytdChange = (latestPrice - lastPriceLastYear) / lastPriceLastYear * 100;\n\n      //Other Metrics\n      const high = Math.max(...values);\n      const highDate = dates[values.indexOf(high)];\n      const low = Math.min(...values);\n      const lowDate = dates[values.indexOf(low)];\n      setData([{\n        x: dates,\n        y: values,\n        type: 'scatter',\n        mode: 'lines' // Changed to 'lines' to remove ticks\n      }]);\n      setTitle(name); // Set the chart title\n      setMetrics({\n        latestPrice,\n        latestChange,\n        ytdChange,\n        high,\n        highDate,\n        low,\n        lowDate\n      });\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, [ticker]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Plot, {\n    data: data,\n    layout: {\n      autosize: true,\n      // Allows the chart to resize automatically\n      title: title,\n      height: 200,\n      margin: {\n        l: 35,\n        r: 35,\n        b: 35,\n        t: 35,\n        // Adjust margins to fit the container\n        pad: 4\n      }\n    },\n    useResizeHandler: true // Ensures the chart resizes with the container\n    ,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    } // Fill the container\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-metrics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Latest price: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 26\n    }\n  }, metrics.latestPrice ? metrics.latestPrice.toFixed(2) : 'N/A')), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Latest change: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: metrics.latestChange > 0 ? 'red' : 'green'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 27\n    }\n  }, metrics.latestChange ? metrics.latestChange.toFixed(2) : 'N/A', \"%\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"YTD: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: metrics.ytdChange > 0 ? 'red' : 'green'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, metrics.ytdChange ? metrics.ytdChange.toFixed(2) : 'N/A', \"%\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"High: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 18\n    }\n  }, metrics.high ? metrics.high.toFixed(2) : 'N/A'), \" on \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 83\n    }\n  }, metrics.highDate ? formatDate(metrics.highDate) : 'N/A')), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Low: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, metrics.low ? metrics.low.toFixed(2) : 'N/A'), \" on \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 80\n    }\n  }, metrics.lowDate ? formatDate(metrics.lowDate) : 'N/A'))));\n}\nexport default Chart;","map":{"version":3,"names":["React","useEffect","useState","Plot","axios","formatDate","dateString","date","Date","getFullYear","getMonth","toString","padStart","getDate","Chart","ticker","data","setData","title","setTitle","metrics","setMetrics","get","process","env","REACT_APP_API_BASE_URL","then","response","responseData","name","parsedData","JSON","parse","prices","dates","map","item","values","Close","latestPrice","length","latestChange","lastYear","lastPriceLastYear","findIndex","ytdChange","high","Math","max","highDate","indexOf","low","min","lowDate","x","y","type","mode","catch","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","layout","autosize","height","margin","l","r","b","t","pad","useResizeHandler","style","width","toFixed","color"],"sources":["C:/Users/frank/Documents/Python Scripts/in_progress/dev_mkt_watchboard/v1/react/src/components/Chart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport axios from 'axios';\r\nimport './Chart.css';\r\n\r\nfunction formatDate(dateString) {\r\n  const date = new Date(dateString);\r\n  return `${date.getFullYear()}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getDate().toString().padStart(2, '0')}`;\r\n}\r\n\r\nfunction Chart({ ticker }) {\r\n  const [data, setData] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [metrics, setMetrics] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/data/${ticker}`)\r\n    .then(response => {\r\n\r\n      const responseData = response.data;\r\n      const name = responseData.name;\r\n      const parsedData = JSON.parse(responseData.prices);\r\n      const dates = parsedData.map(item => item.Date);\r\n      const values = parsedData.map(item => item.Close);\r\n\r\n      // Calculate metrics\r\n      const latestPrice = values[values.length - 1];\r\n      const latestChange = ((values[values.length - 1] - values[values.length - 2]) / values[values.length - 2]) * 100;\r\n \r\n      // Find the last trading day of the previous year\r\n      const lastYear = new Date().getFullYear() - 1;\r\n      const lastPriceLastYear = values[dates.findIndex(date => new Date(date).getFullYear() > lastYear) - 1];\r\n\r\n      // Calculate YTD\r\n      const ytdChange = ((latestPrice - lastPriceLastYear) / lastPriceLastYear) * 100;\r\n      \r\n      //Other Metrics\r\n      const high = Math.max(...values);\r\n      const highDate = dates[values.indexOf(high)];\r\n      const low = Math.min(...values);\r\n      const lowDate = dates[values.indexOf(low)];\r\n\r\n      setData([\r\n        {\r\n          x: dates,\r\n          y: values,\r\n          type: 'scatter',\r\n          mode: 'lines', // Changed to 'lines' to remove ticks\r\n        }\r\n      ]);\r\n      setTitle(name); // Set the chart title\r\n      setMetrics({ latestPrice, latestChange, ytdChange, high, highDate, low, lowDate });\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching data:', error);\r\n    });\r\n  }, [ticker]);\r\n  \r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      <Plot\r\n        data={data}\r\n        layout={{\r\n          autosize: true, // Allows the chart to resize automatically\r\n          title: title,\r\n          height: 200,\r\n          margin: {\r\n            l: 35, r: 35, b: 35, t: 35, // Adjust margins to fit the container\r\n            pad: 4\r\n          }\r\n        }}\r\n        useResizeHandler={true} // Ensures the chart resizes with the container\r\n        style={{ width: \"100%\", height: \"100%\" }} // Fill the container\r\n      />\r\n      <div className=\"chart-metrics\">\r\n        <p>Latest price: <span>{metrics.latestPrice ? metrics.latestPrice.toFixed(2) : 'N/A'}</span></p>\r\n        <p>Latest change: <span style={{ color: metrics.latestChange > 0 ? 'red' : 'green' }}>\r\n          {metrics.latestChange ? metrics.latestChange.toFixed(2) : 'N/A'}%\r\n        </span></p>\r\n        <p>YTD: <span style={{ color: metrics.ytdChange > 0 ? 'red' : 'green' }}>\r\n          {metrics.ytdChange ? metrics.ytdChange.toFixed(2) : 'N/A'}%\r\n        </span></p>\r\n        <p>High: <span>{metrics.high ? metrics.high.toFixed(2) : 'N/A'}</span> on <span>{metrics.highDate ? formatDate(metrics.highDate) : 'N/A'}</span></p>\r\n        <p>Low: <span>{metrics.low ? metrics.low.toFixed(2) : 'N/A'}</span> on <span>{metrics.lowDate ? formatDate(metrics.lowDate) : 'N/A'}</span></p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}